name=PropertiesConfig
# 大小写无关：(ALL<)TRACE<DEBUG<INFO<WARN<ERROR<FATAL(<OFF)
# filter:设置onMismatch="NEUTRAL" 可以让日志经过后续的过滤器,最后一个过滤器建议设置 onMismatch="DENY",不然日志就输出了。
##########公共变量##########
# false为写入新记录之前清除该文件
property.append=false
property.fileSize=50MB
property.filePath=${web:rootDir}/logs
property.filePattern=${filePath}/%d{yyyy-MM}/
property.layoutPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p %pid{-} --- [%40.40t] %-40.40logger{39} : %m%n
property.consolePattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p %pid{-} --- [%15.15t] %-40.40logger{39} : %m%n
##########root##########
rootLogger.level=debug
##########console##########
appender.console.type=Console
appender.console.name=STDOUT
appender.console.target=SYSTEM_OUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=${consolePattern}
appender.console.filter.threshold.type=ThresholdFilter
appender.console.filter.threshold.level=info
rootLogger.appenderRef.console.ref=STDOUT
##########debug##########
appender.D.name=DebugFile
appender.D.type=RollingRandomAccessFile
appender.D.append=${append}
appender.D.fileName=${filePath}/debug.log
appender.D.filePattern=${filePattern}/debug-%d{yyyy-MM-dd}-%i.log.gz
appender.D.layout.type=PatternLayout
appender.D.layout.pattern=${layoutPattern}
appender.D.policies.type=Policies
# 一旦日期/时间模式不再适用于活动文件,TimeBasedTriggeringPolicy将导致翻转。
appender.D.policies.time.type=TimeBasedTriggeringPolicy
# 根据日期模式中最具体的时间单位进行翻转的频率。例如，使用以小时为最特定项目的日期模式，并且每4小时将增加4次翻转。默认值为1。
appender.D.policies.time.interval=1
# 指示是否应调整间隔以使间隔边界上发生下一次翻转。 例如，如果项目是小时，则当前小时是凌晨3点，间隔是4，然后第一次翻转将在凌晨4点发生，然后下一次翻转将发生在上午8点，中午，下午4点等。
appender.D.policies.time.modulate=true
# 表示随机延迟翻转的最大秒数。 默认情况下，该值为0表示没有延迟。 此设置在多个应用程序配置为同时翻转日志文件的服务器上非常有用，并且可以跨时间分散这样做的负担。
appender.D.policies.time.maxRandomDelay=120
# 一旦文件达到指定大小,SizeBasedTriggeringPolicy将导致翻转,后缀为KB，MB或GB
appender.D.policies.size.type=SizeBasedTriggeringPolicy
appender.D.policies.size.size=${fileSize}
# 计数器的最大值。达到此值后，将在后续翻转时删除旧档案。默认值为7。
appender.D.strategy.type=DefaultRolloverStrategy
appender.D.strategy.max=100
appender.D.filter.threshold.type=ThresholdFilter
appender.D.filter.threshold.level=INFO
appender.D.filter.threshold.onMatch=DENY
appender.D.filter.threshold.onMismatch=NEUTRAL
rootLogger.appenderRef.D.ref=DebugFile
rootLogger.appenderRef.D.level=debug
##########Info##########
appender.I.name=InfoFile
appender.I.type=RollingRandomAccessFile
appender.I.append=${append}
appender.I.fileName=${filePath}/info.log
appender.I.filePattern=${filePattern}/info-%d{yyyy-MM-dd}-%i.log.gz
appender.I.layout.type=PatternLayout
appender.I.layout.pattern=${layoutPattern}
appender.I.policies.type=Policies
appender.I.policies.time.type=TimeBasedTriggeringPolicy
appender.I.policies.time.interval=1
appender.I.policies.time.modulate=true
appender.I.policies.time.maxRandomDelay=120
appender.I.policies.size.type=SizeBasedTriggeringPolicy
appender.I.policies.size.size=${fileSize}
appender.I.strategy.type=DefaultRolloverStrategy
appender.I.strategy.max=100
appender.I.filter.threshold.type=ThresholdFilter
appender.I.filter.threshold.level=WARN
appender.I.filter.threshold.onMatch=DENY
appender.I.filter.threshold.onMismatch=NEUTRAL
rootLogger.appenderRef.I.ref=InfoFile
rootLogger.appenderRef.I.level=INFO
##########warn##########
appender.W.name=WarnFile
appender.W.type=RollingRandomAccessFile
appender.W.append=${append}
appender.W.fileName=${filePath}/warn.log
appender.W.filePattern=${filePattern}/warn-%d{yyyy-MM-dd}-%i.log.gz
appender.W.layout.type=PatternLayout
appender.W.layout.pattern=${layoutPattern}
appender.W.policies.type=Policies
appender.W.policies.time.type=TimeBasedTriggeringPolicy
appender.W.policies.time.interval=1
appender.W.policies.time.modulate=true
appender.W.policies.time.maxRandomDelay=120
appender.W.policies.size.type=SizeBasedTriggeringPolicy
appender.W.policies.size.size=${fileSize}
appender.W.strategy.type=DefaultRolloverStrategy
appender.W.strategy.max=100
appender.W.filter.threshold.type=ThresholdFilter
appender.W.filter.threshold.level=ERROR
appender.W.filter.threshold.onMatch=DENY
appender.W.filter.threshold.onMismatch=NEUTRAL
rootLogger.appenderRef.W.ref=WarnFile
rootLogger.appenderRef.W.level=WARN
##########error##########
appender.E.name=ErrorFile
appender.E.type=RollingRandomAccessFile
appender.E.append=${append}
appender.E.fileName=${filePath}/error.log
appender.E.filePattern=${filePattern}/error-%d{yyyy-MM-dd}-%i.log.gz
appender.E.layout.type=PatternLayout
appender.E.layout.pattern=${layoutPattern}
appender.E.policies.type=Policies
appender.E.policies.time.type=TimeBasedTriggeringPolicy
appender.E.policies.time.interval=1
appender.E.policies.time.modulate=true
appender.E.policies.time.maxRandomDelay=120
appender.E.policies.size.type=SizeBasedTriggeringPolicy
appender.E.policies.size.size=${fileSize}
appender.E.strategy.type=DefaultRolloverStrategy
appender.E.strategy.max=100
appender.E.filter.threshold.type=ThresholdFilter
appender.E.filter.threshold.level=FATAL
appender.E.filter.threshold.onMatch=DENY
appender.E.filter.threshold.onMismatch=NEUTRAL
rootLogger.appenderRef.E.ref=ErrorFile
rootLogger.appenderRef.E.level=ERROR
##########fatal##########
appender.F.name=FatalFile
appender.F.type=RollingRandomAccessFile
appender.F.append=${append}
appender.F.fileName=${filePath}/fatal.log
appender.F.filePattern=${filePattern}/fatal-%d{yyyy-MM-dd}-%i.log.gz
appender.F.layout.type=PatternLayout
appender.F.layout.pattern=${layoutPattern}
appender.F.policies.type=Policies
appender.F.policies.time.type=TimeBasedTriggeringPolicy
appender.F.policies.time.interval=1
appender.F.policies.time.modulate=true
appender.F.policies.time.maxRandomDelay=120
appender.F.policies.size.type=SizeBasedTriggeringPolicy
appender.F.policies.size.size=${fileSize}
appender.F.strategy.type=DefaultRolloverStrategy
appender.F.strategy.max=100
rootLogger.appenderRef.F.ref=FatalFile
rootLogger.appenderRef.F.level=FATAL